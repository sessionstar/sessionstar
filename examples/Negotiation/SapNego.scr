//$ ~/scribbler/scribble/scribblec-assrt.sh -assrt -fair -z3 -batch SapNego.scr
//$ sessionstar SapNego.scr Negotiate C

module SapNego;

type <fstar> "int" from "" as int;

// C = Consumer, P = Producer
global protocol Negotiate(role C, role P)
{
  propose(initialPrice: int) from C to P;
  do NegoAux(C, P);  @'<initialPrice>'
}

aux global protocol NegoAux(role C, role P) @'<prop:=0>' {
  choice at P
  {
    accpt(confirmedPrice1: int) from P to C;
      @"prop = confirmedPrice1"
    confirm() from C to P;
  }
  or
  {
    counter(counterOfferPrice: int) from P to C;
      @"counterOfferPrice < prop || counterOfferPrice > prop"
    choice at C
    {
      accpt(confirmedPrice2: int) from C to P;
        @"counterOfferPrice = confirmedPrice2"
      confirm() from P to C;
    }
    or
    {
      counter(countercounter: int) from C to P;
        @"(countercounter < counterOfferPrice || countercounter > counterOfferPrice)
            && (countercounter < prop || countercounter > prop)"
      do NegoAux(C, P);  @'<countercounter>'
    }
    or
    {
      reject() from C to P;
    }
  }
  or
  {
    reject() from P to C;
  }
}


