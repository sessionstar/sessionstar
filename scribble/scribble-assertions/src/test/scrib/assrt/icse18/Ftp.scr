//$ bin/scribblec-assrt.sh -ip scribble-assertions/src/test/scrib/ -d scribble-assertions/src/test/scrib/ scribble-assertions/src/test/scrib/assrt/icse18/Ftp.scr -V -ass Proto1


// http://sandbox.kidstrythisathome.com/erdos/


module assrt.icse18.Ftp;


sig <java> ... as 220;

type <dotnet> "System.UInt32" from "..." as int;
type <dotnet> "System.String" from "..." as str;


global protocol Proto1(role C, role D, role S) @(ppp=0);  // ppp is usage
{
	220 from S to C;
	USER from C to S;
	choice at S
	{
		331 from S to C;
		PASS from C to S;
		choice at S
		{
			230 from S to C;
			choice at C
			{
				PASV from C to S; // Passive mode
				choice at S
				{
					227(p:Int) from S to C; @(open(p,D) && (ppp=0));  
							// Encode roles and vars as ints; encode linear "consumer" as function; encode linear resource usage as statevar
									// Need to fully extend to poly recvars
							// -- and linear ownership? -- or linear ownership subsumed by basic linear usage and basic var knowledge?
							// FIXME: also encode basic var knowledge as functions? -- currently in model

					connect C to D;	
						
					(p2) from C to D; @(p2=p);
						
					connect D to S; @(port(p2) && (ppp=0));
						
					rec X @(ppp=1);
					{
						...
					}
				}
				or
				{
					...
				}
			}
			or
			{
				connect C to D;	

				PORT(q:Int) from D to C; @"open=q:S" // Active mode
				
				(q2) from C to S; @(q2 = q);
				
				connect S to D;
				
				choice at S
				{
					200 from S to C;

					...

				}
			}
			//or { ... }
		}
	}
}
